AVbin 10

- Updated to Libav trunk as of 2012-08-12 (which finally fixed the .ogg decoding
  problems on all platforms!).

- Added the avbin_get_info() function and removed the avbin_get_libav_commit()
  and avbin_get_libav_version() functions that I tried out in AVbin 9, which I
  am now pretending never got released.

  avbin_get_info() returns an _AVbinInfo struct (typedef AVbinInfo) with the
  following members (all strings except where indicated):
  - version                 > integer, same as avbin_get_version()
  - version_string          > potentially includes prerelease info,
                              for example: "10-beta1"
  - build_date              > %Y-%m-%d %H:%M:%S %z
  - repo                    > Git URL
  - commit                  > Git commit hash
  - backend                 > "libav" or "ffmpeg"
  - backend_version_string  > Most recent backend version tag or trunk and date
                              i.e. "v0.8.3" or "trunk (Wed Aug 22 19:58:46 2012 -0400)"
  - backend_repo            > Backend git URL
  - backend_commit          > Backend git commit hash

- Added AVbinOptions typedef (struct _AVbinOptions) for use with the new
  avbin_init_options() function.

- Added avbin_init_options() to handle initialization options.  avbin_init() now
  creates an AVbinOptions with default settings and calls avbin_init_options()
  under the hood.  Future versions of AVbin may have new AVbinOptions* structs
  that you can pass to avbin_init_options().  Currently, the only option is how
  many threads you would like avbin to use for decoding (defaults to 1, using
  0 [autodetect] is recommended).

- Updated avbin_have_features() with new features to check for.
  "options" > presence of avbin_init_options(), AVbinOptions, and multithreading
  "info"    > presence of avbin_get_info(), AVbinInfo

- Adapted the underlying C code implementation to upstream API changes, as well
  as switching to more portable data types across the board.  This work was
  almost entirely pulled from Jernej Virag's fork, so kudos to him!

- Implemented multithreading support inspired by Jernej's work.  If you want
  the library to use multiple threads, please see avbin_init_options() in the
  documentation.

- Overhauled all configure options and Makefile commands so that all six
  supported platforms have very similar builds now.  Bz2 and Gzip compression is
  enabled on all platforms now, for example.  Every platform also had to have
  configure and make options adjusted to compensate for new versions of Xcode
  and OS X, new versions of Linux, and the new version of Libav.

- Overhauled the build script.  All build errors now have descriptive messages.
  The options may now be specified at any argument position.  The --fast option
  now compiles with more processes at once.  The --clean option now does a
  better job cleaning.  The libav submodule is automatically updated before
  building.

- Overhauled the dist script, which now generates binary installers for all
  platforms

- The OS X version is now a universal library containing both 32-bit and 64-bit
  code.

- The OS X release is now a package installer, instead of a tarball.

- The Linux release is now a compressed binary installer instead of a tarball.

- The Windows release is now an executable installer instead of a zipfile.

- All installers now present and require acceptance of the license.

- Updated the Makefile for the avbin_dump example so that it compiles on Linux

- Updated the avbin_dump example:
  - Command-line arguments are now processed position-independently
  - The new help argument (-h, --help) displays usage
  - The new verbose argument (-v, --verbose) enables printing out information
    about each packet decoded from a media file.  (Previously you had to modify
    the source code and recompile to enable this).
  - The verbose output now includes timestamps (in microseconds).

- Updated the online API documentation: http://avbin.github.com/docs/

- Ran the repository through `git filter-branch` and eliminated all of the
  ffmpeg source code, which shrinks the repo size to 528K (much better than
  about 100MB!!)  NOTE: If you have a pre-filter clone, you will need to
  either make a new clone (easy), or rebase:
  http://git-scm.com/book/en/Git-Branching-Rebasing

- Configured a buildbot master.  Configured buildbot slaves for each platform.

- Resolved issues 11-17, 19, 23-33, and 36-38.


AVbin 9 *UNSTABLE RELEASE -- SEE BELOW*

- "Updated" to Libav 0.6.6 -- despite the recentness of the latest release on
  this branch, I believe the svn trunk revision we were using for 8.1 eventually
  became the 0.7 branch, which is unfortunately binary incompatible because
  several deprecated functions we use were removed in the 0.7 branch.  This
  release has notable audio glitches under Win64 in my testing compared to 8.1.
  Other than that, I can't determine any subjective quality differences from
  version 8.1.  YMMV.

- DEPRECATED avbin_get_ffmpeg_revision() in favor of two new functions:
  1) avbin_get_libav_commit() (string of the commit hash)
  2) avbin_get_libav_version() (string of the latest upstream tagged version)

- Switched back to a universal build for OS X.

- Added libav as a git submodule -- we have our own github libav fork.

- Removed the old ffmpeg svn trunk code.

- build.sh automatically inits and updates the libav module if necessary.

- Fixed Linux build linking under Ubuntu 12.04.

- Updated the config.h patch for 32-bit Linux.

- Removed libavcore.a linking calls - this version doesn't have libavcore.

- Refactored dist.sh:  One main codepath, more error checking, better output.

- Refactored build.sh: Less codepaths, more error checking, better output.

- Updated the copyright on code files.

- Added a README for the win64 release.

- Discontinued support for packaging a "source release".

- Updated the project README.

- All references to FFmpeg were changed to Libav except for deprecated
  functions and old CHANGELOG entries.

- Reformatted CHANGELOG


AVbin 8.1

- Created new doxyfile for new version of doxygen

- Integrated Anatoly Techtonik's patch to allow avbin.h to be used in C++

- Fixed OS X builds for Lion.  (Thanks for testing assistance from Richard
  Jones)

- Fixed the Linux builds for Ubuntu 12.04

- Fixed the (crosscompiled) Windows builds for Ubuntu 12.04


AVbin 8
  (Nathan Stocks - 2011)

- Fix darwin-x86-64 build for Lion/Snow Leopard.

- Export copy of FFmpeg into repository due to difficulties with the external
  items referencing repositories that rapidly change and/or are being
  converted from subversion to Git.

- Directly applied AVbin-specific patches to above copy of FFmpeg.

  (All changes below made by Alex Holkner <= 2008 - as far as I can see.
  ~ Nathan Stocks)

- Update to FFmpeg r15943

- Deprecate AVBIN_SAMPLE_FORMAT_S24 (FFmpeg no longer exports this format)

- Fix darwin-x86-64 build for Lion/Snow Leopard.


AVbin 7

- Remove stack protector check, for compatibility with older glibc.

- Fix linux-64 builds


AVbin 6

- Fix linux builds for use with glibc < 2.7


AVbin 5

- Update to FFmpeg r13661

- Fix Win32 build for GCC 4.3.

- Fix linux-x86-32 build (rebuilt with correct compiler).


AVbin 4

- Fix Darwin build for intel/10.4 and earlier.


AVbin 3

- Update to FFmpeg r12795

- Scripts updated for this FFmpeg release and building on OS X 10.5

- Add patch for building shared linux-64

- Fix Darwin dylib install_name, and set default install location to
  /usr/local/lib instead of /usr/lib.


AVbin 2

- Update to FFmpeg r10112

- Remove AC3 enabling patch, possibly enabled GPL code.

- Remove sdp.c patch, no longer necessary.

- Add CHANGELOG


AVbin 1

- Initial release.
